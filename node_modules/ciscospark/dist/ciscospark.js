"use strict";

/**!
 *
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 * @private
 */

// Note: this file is written using commonjs instead of import/export to
// simplify consumption by those less familiar with the current state of
// JavaScript modularization

/* eslint camelcase: [0] */

require("@ciscospark/plugin-authorization");
require("@ciscospark/plugin-phone");
// explicitly load wdm, since we're relying on preDiscoveryServices and the
// url interceptor
require("@ciscospark/internal-plugin-wdm");
require("@ciscospark/plugin-logger");
require("@ciscospark/plugin-people");

var _require = require("lodash"),
    merge = _require.merge;

var _require2 = require("@ciscospark/spark-core"),
    registerPlugin = _require2.registerPlugin;

var SparkCore = require("@ciscospark/spark-core").default;
var Memberships = require("./plugins/memberships").default;
var Messages = require("./plugins/messages").default;
var Rooms = require("./plugins/rooms").default;
var Teams = require("./plugins/teams").default;
var TeamMemberships = require("./plugins/team-memberships").default;
var Webhooks = require("./plugins/webhooks").default;
var config = require("./config");

registerPlugin("memberships", Memberships);
registerPlugin("messages", Messages);
registerPlugin("rooms", Rooms);
registerPlugin("teams", Teams);
registerPlugin("teamMemberships", TeamMemberships);
registerPlugin("webhooks", Webhooks);

// documentation.js puts hashes in relative urls, so need to specify full urls
// here
/**
 * See {@link https://ciscospark.github.io/spark-js-sdk/example/browsers|Browser Guide} and
 * {@link https://ciscospark.github.io/spark-js-sdk/example/servers|Server Guide}
 * @see {@link /example/browsers|Browser Guide}
 * @see {@link /example/servers|Server Guide}
 * @class CiscoSpark
 */
var CiscoSpark = SparkCore.extend({
  ciscospark: true,
  version: "1.9.1"
});

CiscoSpark.version = "1.9.1";

/**
 * Create a new ciscospark instance
 *
 * @example
 * <caption>Create a new CiscoSpark instance configured for your OAuth client</caption>
 * const ciscospark = CiscoSpark.init({
 *   config: {
 *     credentials: {
 *       authorizationString: `<AUTHORIZATION URL FROM DEVELOPER PORTAL>`
 *     }
 *   }
 * });
 *
 * @example
 * <caption>Create a new CiscoSpark instance configured for a Bot</caption>
 * const ciscospark = CiscoSpark.init({
 *   config: {
 *     credentials: `<BOT TOKEN FROM DEVELOPER PORTAL>`
 *   }
 * });
 *
 *
 * @param {Object} attrs
 * @param {Object} attrs.config (optional)
 * @memberof CiscoSpark
 * @returns {CiscoSpark}
 */
CiscoSpark.init = function init() {
  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  attrs.config = merge({}, config, attrs.config);
  return new CiscoSpark(attrs);
};

module.exports = CiscoSpark;